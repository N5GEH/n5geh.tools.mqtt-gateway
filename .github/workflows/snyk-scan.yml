name: Snyk Container Scan

on:
  push:
    branches:
      - 20-security-scan-of-the-image
  pull_request:
    branches:
      - main

jobs:
  snyk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build API image
      run: docker build -t n5gehtoolsmqtt-gateway-api:latest -f ./backend/api/Dockerfile .

    - name: Build Gateway image
      run: docker build -t n5gehtoolsmqtt-gateway-gateway:latest -f ./backend/gateway/Dockerfile .

    - name: Snyk Scan API image
      id: snyk_api
      uses: snyk/actions/docker@master
      with:
        image: 'n5gehtoolsmqtt-gateway-api:latest'
        args: '--severity-threshold=high --json-file-output=snyk-api-results.json'
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      continue-on-error: true

    - name: Snyk Scan Gateway image
      id: snyk_gateway
      uses: snyk/actions/docker@master
      with:
        image: 'n5gehtoolsmqtt-gateway-gateway:latest'
        args: '--severity-threshold=high --json-file-output=snyk-gateway-results.json'
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      continue-on-error: true

    - name: Print Working Directory
      run: pwd

    - name: List Files in Workspace
      run: ls -al

    - name: Upload Snyk Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: snyk-results
        path: |
          snyk-api-results.json
          snyk-gateway-results.json

    - name: Ensure Security Label Exists
      run: |
        gh label create security --color FF0000 --description "Security related issues" || echo "Label already exists"

    - name: Create GitHub Issues for Vulnerabilities
      if: always()
      run: |
        for file in snyk-api-results.json snyk-gateway-results.json; do
          if [ -f "$file" ]; then
            vulnerabilities=$(jq -r '.vulnerabilities[] | @base64' $file)
            for vulnerability in $vulnerabilities; do
              _jq() {
               echo ${vulnerability} | base64 --decode | jq -r ${1}
              }
              title="SNYK: $(_jq '.title')"
              description="## Description\n$(_jq '.description')\n\n## Info\n$(_jq '.url')\n\n## Severity\n$(_jq '.severity')\n\n## Introduced through\n$(_jq '.from | join(", ")')\n\n## Remediation\n$(_jq '.remediation')"
              echo "Creating issue: $title"
              gh issue create --title "$title" --body "$description" --label "security" || echo "Failed to create issue: $title"
            done
          else
            echo "File $file not found"
          fi
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
