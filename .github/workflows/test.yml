name: Snyk Docker Scan

on:
  push:
    branches:
      - 20-security-scan-of-the-image
  pull_request:
    branches:
      - main

jobs:
  snyk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build API image
      run: docker build -t n5gehtoolsmqtt-gateway-api:latest -f ./backend/api/Dockerfile .

    - name: Build Gateway image
      run: docker build -t n5gehtoolsmqtt-gateway-gateway:latest -f ./backend/gateway/Dockerfile .

    - name: Install Snyk CLI
      run: npm install -g snyk

    - name: Run Snyk to check API Docker image for vulnerabilities
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        snyk container test n5gehtoolsmqtt-gateway-api:latest --json > snyk-api-report.json || true

    - name: Run Snyk to check Gateway Docker image for vulnerabilities
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        snyk container test n5gehtoolsmqtt-gateway-gateway:latest --json > snyk-gateway-report.json || true

    - name: Filter high and critical vulnerabilities for API image
      run: |
        jq '.vulnerabilities |= map(select(.severity == "high" or .severity == "critical"))' snyk-api-report.json > snyk-api-high-critical-report.json
      shell: bash

    - name: Filter high and critical vulnerabilities for Gateway image
      run: |
        jq '.vulnerabilities |= map(select(.severity == "high" or .severity == "critical"))' snyk-gateway-report.json > snyk-gateway-high-critical-report.json
      shell: bash

    - name: Check if API report contains high or critical vulnerabilities
      id: api_vuln_check
      run: |
        count=$(jq '.vulnerabilities | length' snyk-api-high-critical-report.json)
        echo "::set-output name=has_vulnerabilities::$count"

    - name: Check if Gateway report contains high or critical vulnerabilities
      id: gateway_vuln_check
      run: |
        count=$(jq '.vulnerabilities | length' snyk-gateway-high-critical-report.json)
        echo "::set-output name=has_vulnerabilities::$count"

    - name: Generate API issue body
      id: api_issue_body
      if: steps.api_vuln_check.outputs.has_vulnerabilities > 0
      run: |
        echo "### High/Critical Vulnerabilities Found in API Docker Image" > api_issue_body.txt
        echo "The following high/critical vulnerabilities were found in the API Docker image:" >> api_issue_body.txt
        jq -r '.vulnerabilities[] | "* \(.title): \(.description) (Severity: \(.severity))\n  Identifiers: \(.identifiers)"' snyk-api-high-critical-report.json >> api_issue_body.txt
        echo "Please review and address these vulnerabilities as soon as possible." >> api_issue_body.txt
        echo "::set-output name=body::$(cat api_issue_body.txt)"

    - name: Generate Gateway issue body
      id: gateway_issue_body
      if: steps.gateway_vuln_check.outputs.has_vulnerabilities > 0
      run: |
        echo "### High/Critical Vulnerabilities Found in Gateway Docker Image" > gateway_issue_body.txt
        echo "The following high/critical vulnerabilities were found in the Gateway Docker image:" >> gateway_issue_body.txt
        jq -r '.vulnerabilities[] | "* \(.title): \(.description) (Severity: \(.severity))\n  Identifiers: \(.identifiers)"' snyk-gateway-high-critical-report.json >> gateway_issue_body.txt
        echo "Please review and address these vulnerabilities as soon as possible." >> gateway_issue_body.txt
        echo "::set-output name=body::$(cat gateway_issue_body.txt)"

    - name: Create GitHub issues for API image vulnerabilities
      if: steps.api_vuln_check.outputs.has_vulnerabilities > 0
      uses: JasonEtco/create-an-issue@v2
      with:
        title: "High/Critical Vulnerabilities Found in API Docker Image"
        body: ${{ steps.api_issue_body.outputs.body }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub issues for Gateway image vulnerabilities
      if: steps.gateway_vuln_check.outputs.has_vulnerabilities > 0
      uses: JasonEtco/create-an-issue@v2
      with:
        title: "High/Critical Vulnerabilities Found in Gateway Docker Image"
        body: ${{ steps.gateway_issue_body.outputs.body }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}